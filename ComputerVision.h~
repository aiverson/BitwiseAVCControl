/* 
 * File:   ComputerVision.h
 * Author: sondra
 *
 * Created on June 17, 2014, 10:44 AM
 */

#ifndef COMPUTERVISION_H
#define	COMPUTERVISION_H

class ComputerVision {
public:
    ComputerVision();
    ComputerVision(const ComputerVision& orig);
    virtual ~ComputerVision();

    void *RunCV();

private:
    double avgCaptureTime,
      avgConversionTime,
      avgSplitTime,
      avgProcessingTime,
      avgDisplayTime;

    long captureTime,
      conversionTime,
      splitTime,
      processingTime,
      displayTime;

    int nFrames;

    const double areaRatio = 0.65;

    void InitGUI();
    void RecordTime(long delta, double *avgTime);
    long GetTimeDelta(struct timeval timea, struct timeval timeb);
    void Log(const char* msg, ...);
    void CaptureFrame(VideoCapture &camera, Mat &frame_host, gpu::GpuMat &frame, Mat &debugOverlay);
    void ConvertToHSV(gpu::GpuMat &frame, gpu::GpuMat &hue, gpu::GpuMat &sat, gpu::GpuMat &val);
    void ProcessFrame(gpu::GpuMat &hue, gpu::GpuMat &sat, gpu::GpuMat &balloonyness, Mat &debugOverlay);
    void DisplayOutput(Mat frame, gpu::GpuMat hue, gpu::GpuMat sat, gpu::GpuMat val, gpu::GpuMat balloonyness, Mat debugOverlay);

};

#endif	/* COMPUTERVISION_H */

